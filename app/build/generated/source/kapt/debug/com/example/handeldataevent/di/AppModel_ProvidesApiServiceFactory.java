// Generated by Dagger (https://dagger.dev).
package com.example.handeldataevent.di;

import com.example.handeldataevent.data.remote.network.ApiPostsService;
import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModel_ProvidesApiServiceFactory implements Factory<ApiPostsService> {
  private final Provider<Moshi> moshiProvider;

  public AppModel_ProvidesApiServiceFactory(Provider<Moshi> moshiProvider) {
    this.moshiProvider = moshiProvider;
  }

  @Override
  public ApiPostsService get() {
    return providesApiService(moshiProvider.get());
  }

  public static AppModel_ProvidesApiServiceFactory create(Provider<Moshi> moshiProvider) {
    return new AppModel_ProvidesApiServiceFactory(moshiProvider);
  }

  public static ApiPostsService providesApiService(Moshi moshi) {
    return Preconditions.checkNotNullFromProvides(AppModel.INSTANCE.providesApiService(moshi));
  }
}
